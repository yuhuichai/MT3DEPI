#!/bin/bash

# set data directories
top_dir=/Volumes/VAPER/MTEPI/

cd ${top_dir}

for patDir in 200306wholebrain.Subj03.tutorial; do
{
	
	echo "*********************************************************************************************"
	echo " start working in ${patDir} "
	echo "*********************************************************************************************"

	# SUMA was generated by @SUMA_Make_Spec_FS -fspath Surf/surf -sid SUMA -NIFTI
	# which has the surface and brain segmentation files of MT-3D-EPI
	sumaDir=${top_dir}/${patDir}/SUMA
	cd ${sumaDir}

	3dcalc -a aparc+aseg_REN_gm.nii.gz -expr "step(a-48)*1000" \
		-prefix gm_boosted.nii -overwrite
	3dcalc -a aparc+aseg_REN_wmat.nii.gz -expr "amongst(a,1,21,38,41,42,43,44,45)*1000" \
		-prefix wm_boosted.nii -overwrite
	3dcalc -a aparc+aseg_REN_all.nii.gz -expr "step(a)*1000" \
		-prefix all_boosted.nii -overwrite
		
	3dcalc -a aparc+aseg_REN_gm.nii.gz -expr "a*amongst(a,7,8,9,10,13,14,15,17,18,27,28,29,30,31,32,33,34)" \
		-prefix aparc+aseg_REN_subc.nii.gz -overwrite # subcortical areas
	3dcalc -a aparc+aseg_REN_subc.nii.gz -expr "step(a)*1000" \
		-prefix subc_boosted.nii -overwrite # subcortical areas

	3dcalc -a aparc+aseg_REN_all.nii.gz -expr "amongst(a,3,23,4,24,11,12,16,20,36)*1000" \
		-prefix csf_boosted.nii -overwrite


	3dresample -master ../scaledXYZ_mean.sub_d_dant.masked.nii -rmode NN \
		-overwrite -prefix gm_upsamp.nii -input gm_boosted.nii

	3dresample -master ../scaledXYZ_mean.sub_d_dant.masked.nii -rmode NN \
		-overwrite -prefix wm_upsamp.nii -input wm_boosted.nii

	3dresample -master ../scaledXYZ_mean.sub_d_dant.masked.nii -rmode NN \
		-overwrite -prefix subc_upsamp.nii -input subc_boosted.nii

	3dresample -master ../scaledXYZ_mean.sub_d_dant.masked.nii -rmode NN \
		-overwrite -prefix all_upsamp.nii -input ${sumaDir}/all_boosted.nii

	3dresample -master ../scaledXYZ_mean.sub_d_dant.masked.nii -rmode NN \
		-overwrite -prefix csf_upsamp.nii -input csf_boosted.nii

	3dcalc -a wm_upsamp.nii -expr "step(a-500)" \
		-prefix wm_upsamp_thr.nii -overwrite
	3dcalc -a all_upsamp.nii -expr "step(a-500)" \
		-prefix all_upsamp_thr.nii -overwrite
	3dcalc -a gm_upsamp.nii -expr "step(a-200)" \
		-prefix gm_upsamp_thr.nii -overwrite
	3dcalc -a subc_upsamp.nii -expr "step(a-200)" \
		-prefix subc_upsamp_thr.nii -overwrite
	3dcalc -a csf_upsamp.nii -expr "step(a-500)" \
		-prefix csf_upsamp_thr.nii -overwrite


	if [ -f ../../brain_mask_comb_mc.nii ]; then
		3dresample -master ../scaledXYZ_mean.sub_d_dant.masked.nii -rmode NN \
			-overwrite -prefix scaledXYZ_brain_mask_comb_mc.nii \
			-input ../../brain_mask_comb_mc.nii
	else
		3dresample -master ../scaledXYZ_mean.sub_d_dant.masked.nii -rmode NN \
			-overwrite -prefix scaledXYZ_brain_mask_comb_mc.nii \
			-input ../../brain_mask_comb.nii
	fi

	3dcalc -a gm_upsamp_thr.nii -b wm_upsamp_thr.nii -c subc_upsamp_thr.nii \
		-d scaledXYZ_brain_mask_comb_mc.nii \
		-expr "(step(a)+2*step(b)*iszero(a+c)+3*step(c)*iszero(a))*step(d)" \
		-prefix gm_wm_subc_upsamp.nii -overwrite

	rm *boosted*nii *m_upsamp.nii subc_upsamp*.nii all_upsamp.nii csf_upsamp.nii

	3dmask_tool -dilate_inputs 1 -prefix gm_upsamp_thr_d1.nii -overwrite -inputs gm_upsamp_thr.nii

	# extract white matter edge
	3dmask_tool -dilate_inputs -1 -prefix wm_upsamp_thr_e1.nii -overwrite -inputs wm_upsamp_thr.nii
	3dcalc -a wm_upsamp_thr.nii -b wm_upsamp_thr_e1.nii  -c gm_upsamp_thr_d1.nii -expr '(step(a)-step(b))*step(c)' \
		-prefix wm_upsamp_edge.nii -overwrite

	# extract csf edge
	3dmask_tool -dilate_inputs 1 -prefix all_upsamp_thr_d1.nii -overwrite -inputs all_upsamp_thr.nii
	3dcalc -a all_upsamp_thr.nii -b all_upsamp_thr_d1.nii -c gm_upsamp_thr_d1.nii -expr '(step(b)-step(a))*step(c)' \
		-prefix all_upsamp_edge.nii -overwrite

	# generate cortical layermask
	3dcalc -a all_upsamp_edge.nii -b wm_upsamp_edge.nii -c gm_upsamp_thr.nii \
		-expr "(step(a)+2*step(b)+3*step(c)*iszero(a+b))" \
		-prefix LayerMask4smooth.nii -overwrite

	# generate csf layermask
	3dmask_tool -dilate_inputs 1 -prefix all_upsamp_thr_d1.nii -overwrite -inputs all_upsamp_thr.nii
	3dmask_tool -dilate_inputs 2 -prefix all_upsamp_thr_d2.nii -overwrite -inputs all_upsamp_thr.nii
	3dcalc -a all_upsamp_thr_d2.nii -b all_upsamp_thr_d1.nii -expr "(step(a)-step(b))" \
		-prefix csfMask_edge2.nii -overwrite

	3dmask_tool -dilate_inputs 5 -prefix all_upsamp_thr_d5.nii -overwrite -inputs all_upsamp_thr.nii
	3dcalc -a all_upsamp_thr_d5.nii -b all_upsamp_thr_d2.nii -expr "(step(a)-step(b))" \
		-prefix csfMask.nii -overwrite

	3dmask_tool -dilate_inputs 6 -prefix all_upsamp_thr_d6.nii -overwrite -inputs all_upsamp_thr.nii
	3dcalc -a all_upsamp_thr_d6.nii -b all_upsamp_thr_d5.nii -expr "(step(a)-step(b))" \
		-prefix csfMask_edge1.nii -overwrite

	3dcalc -a csfMask_edge1.nii -b csfMask_edge2.nii -c csfMask.nii -d LayerMask4smooth.nii \
		-expr "(step(a)+2*step(b)+3*step(c)*iszero(a+b))*iszero(d)" \
		-prefix csfMask4smooth.nii -overwrite

	3dmask_tool -dilate_inputs 8 -prefix all_upsamp_thr_d8.nii -overwrite -inputs all_upsamp_thr.nii
	3dcalc -a all_upsamp_thr_d8.nii -b all_upsamp_thr_d1.nii -c layers3D_4smooth.nii \
		-expr "(step(a)-step(b))*iszero(c)" -prefix csfMask_d8.nii -overwrite

	3dcalc -a all_upsamp_thr_d8.nii -b all_upsamp_thr_d2.nii -c layers3D_4smooth.nii \
		-expr "(step(a)-step(b))*iszero(c)" -prefix csfMask_d8_d2.nii -overwrite

	rm *thr_d* *edge*.nii csfMask.nii

	# generate wm layermask
	3dmask_tool -dilate_inputs -1 -prefix wm_upsamp_thr_e1.nii -overwrite -inputs wm_upsamp_thr.nii
	3dmask_tool -dilate_inputs -2 -prefix wm_upsamp_thr_e2.nii -overwrite -inputs wm_upsamp_thr.nii
	3dmask_tool -dilate_inputs -4 -prefix wm_upsamp_thr_e4.nii -overwrite -inputs wm_upsamp_thr.nii
	3dmask_tool -dilate_inputs -5 -prefix wm_upsamp_thr_e5.nii -overwrite -inputs wm_upsamp_thr.nii

	3dmask_tool -dilate_inputs 5 -prefix gm_upsamp_thr_d5.nii -overwrite -inputs gm_upsamp_thr.nii

	3dcalc -a wm_upsamp_thr_e4.nii -b wm_upsamp_thr_e2.nii -expr "(step(b)-step(a))" \
		-prefix wmMask.nii -overwrite

	3dcalc -a wm_upsamp_thr_e5.nii -b wm_upsamp_thr_e4.nii -expr "(step(b)-step(a))" \
		-prefix wmMask_edge2.nii -overwrite

	3dcalc -a wm_upsamp_thr_e2.nii -b wm_upsamp_thr_e1.nii -expr "(step(b)-step(a))" \
		-prefix wmMask_edge1.nii -overwrite

	3dcalc -a wmMask_edge1.nii -b wmMask_edge2.nii -c wmMask.nii -d LayerMask4smooth.nii -e gm_upsamp_thr_d5.nii \
		-expr "(step(a)+2*step(b)+3*step(c)*iszero(a+b))*iszero(d)*step(e)" \
		-prefix wmMask4smooth.nii -overwrite

	rm *thr_d* *thr_e* csfMask.nii wmMask.nii *edge*.nii *m_upsamp_thr.nii all_upsamp_thr.nii

	echo "************** grow cortical layers with RENZO's program ******************"
	3dcalc -a LayerMask4smooth.nii -expr a -datum short -overwrite -prefix sht_LayerMask4smooth.nii

	# input for LN_GROW_LAYERS always needs to be in datatype SHORT
	LN_GROW_LAYERS -rim sht_LayerMask4smooth.nii -threeD
	mv layers.nii layers3D_4smooth.nii
	rm sht_LayerMask4smooth.nii

	echo "************** grow wm and csf layers with RENZO's program ******************"
	3dcalc -a csfMask4smooth.nii -expr a -datum short -overwrite -prefix sht_csfMask4smooth.nii
	LN_GROW_LAYERS -N 7 -rim sht_csfMask4smooth.nii -threeD
	mv layers.nii csf3D_4smooth.nii
	rm sht_csfMask4smooth.nii

	3dcalc -a wmMask4smooth.nii -expr a -datum short -overwrite -prefix sht_wmMask4smooth.nii
	LN_GROW_LAYERS -N 6 -rim sht_wmMask4smooth.nii -threeD
	mv layers.nii wm3D_4smooth.nii
	rm sht_wmMask4smooth.nii

	echo "************** combine cortical layers, wm and csf ******************"
	3dcalc -a wm3D_4smooth.nii -b layers3D_4smooth.nii -c csf3D_4smooth.nii \
		-d scaledXYZ_brain_mask_comb_mc.nii -e ../scaledXYZ_mean.sub_d_dant.masked.nii
		-expr "(a+(b+step(b)*6)+(c+step(c)*26))*step(d)*notzero(e)" -prefix all3D_4smooth.nii -overwrite
	rm scaledXYZ_brain_mask_comb_mc.nii


}
done
wait

